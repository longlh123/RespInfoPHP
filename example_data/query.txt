CREATE DATABASE IF NOT EXISTS db_panel;

CREATE TABLE IF NOT EXISTS provinces(
	province_id VARCHAR(10) PRIMARY KEY,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS respondents(
  resp_id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  province_id VARCHAR(10) NOT NULL,
  birth_of_year INT NOT NULL,
  gender VARCHAR(10),
  cell_phone LONGTEXT NOT NULL,
  status VARCHAR(255) NOT NULL,
  create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  status_of_reason VARCHAR(500),
  status_of_reason_at TIMESTAMP,
  FOREIGN KEY(province_id)
    REFERENCES provinces(province_id)
    ON UPDATE RESTRICT
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS projects(
  project_id VARCHAR(50) NOT NULL PRIMARY KEY,
  description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS respondents(
  resp_id VARCHAR(100) PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  year_of_birth INT NOT NULL,
  gender VARCHAR(10),
  address VARCHAR(500),
  house_no VARCHAR(255),
  street VARCHAR(255),
  ward VARCHAR(255),
  district VARCHAR(255),
  province_id VARCHAR(10) NOT NULL,
  phone LONGTEXT NOT NULL,
  cellphone LONGTEXT NOT NULL,
  email LONGTEXT NOT NULL,
  status VARCHAR(255) NOT NULL,
  create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  project_id VARCHAR(50) NOT NULL,
  instance_id VARCHAR(255),
  shell_chainid VARCHAR(255),
  FOREIGN KEY(province_id)
    REFERENCES provinces(province_id)
    ON UPDATE RESTRICT
    ON DELETE CASCADE,
  FOREIGN KEY(project_id)
    REFERENCES projects(project_id)
    ON UPDATE RESTRICT
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS respondents_histories(
	resp_id VARCHAR(100) NOT NULL,
    project_id VARCHAR(50) NOT NULL,
    participate_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status_of_contact VARCHAR(500),
    FOREIGN KEY(resp_id)
    	REFERENCES respondents(resp_id)
    	ON UPDATE RESTRICT
    	ON DELETE CASCADE,
    FOREIGN KEY(project_id)
    	REFERENCES projects(project_id)
    	ON UPDATE RESTRICT
    	ON DELETE CASCADE
);

SELECT gender, provinces.province_id, provinces.name, COUNT(resp_id) 
FROM respondents
INNER JOIN provinces ON provinces.province_id = respondents.province_id
GROUP BY gender, province_id
ORDER BY CAST(provinces.province_id AS UNSIGNED), gender

1. Tìm status of contact của tất cả các đáp viên tham gia dự án gần nhất.

SELECT * FROM respondents_histories 
INNER JOIN (SELECT resp_id, MAX(participate_at) AS participate_at
                    FROM respondents_histories
                    GROUP BY(resp_id)) max_participate 
ON respondents_histories.resp_id = max_participate.resp_id AND respondents_histories.participate_at = max_participate.participate_at
WHERE respondents_histories.resp_id LIKE 'VN02000000000006'

2. Sau đó, thống kê số liệu status of contact của tất cả các cuộc gọi.

SELECT respondents_histories.status_of_contact, Count(*) AS number_of_respondents FROM respondents_histories 
INNER JOIN (SELECT resp_id, MAX(participate_at) AS participate_at
                    FROM respondents_histories
                    GROUP BY(resp_id)) max_participate 
ON respondents_histories.resp_id = max_participate.resp_id AND respondents_histories.participate_at = max_participate.participate_at
GROUP BY respondents_histories.status_of_contact